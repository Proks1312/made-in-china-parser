import streamlit as st
from parser_script import parse_companies, get_max_page
import io
import pandas as pd

st.set_page_config(page_title="–ü–∞—Ä—Å–µ—Ä Made-in-China", layout="centered")

st.markdown(
    "<h1 style='white-space: nowrap;'>üåè –ü–∞—Ä—Å–µ—Ä –∫–æ–º–ø–∞–Ω–∏–π —Å Made-in-China</h1>",
    unsafe_allow_html=True
)

search_query = st.text_input("üîç –í–≤–µ–¥–∏—Ç–µ, —á—Ç–æ –∏—Å–∫–∞—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä: conveyor belting)", value="conveyor belting")

if search_query:
    max_pages = get_max_page(search_query)
    st.markdown(f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞: **{max_pages}**")

    start_page = st.number_input(
        "‚ñ∂Ô∏è –ù–∞—á–∞—Ç—å —Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã",
        min_value=1,
        max_value=max_pages,
        value=1
    )

    pages = st.number_input(
        "üìÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞",
        min_value=1,
        max_value=max_pages - start_page + 1,
        value=1
    )

    # ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    progress_placeholder = st.empty()

    # ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    def show_current_page(p):
        progress_placeholder.info(f"üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {p}")

    if st.button("üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–∞—Ä—Å–∏–Ω–≥"):
        with st.spinner("–ü–∞—Ä—Å–∏–Ω–≥ –¥–∞–Ω–Ω—ã—Ö..."):
            try:
                data_list, last_page = parse_companies(
                    query=search_query,
                    start_page=start_page,
                    page_count=pages,
                    progress_callback=show_current_page  # ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: –ø–µ—Ä–µ–¥–∞—á–∞ –∫–æ–ª–±—ç–∫–∞
                )
                df = pd.DataFrame(data_list)
            except Exception as e:
                st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ: {e}")
                df = pd.DataFrame()
                last_page = 0

        if not df.empty:
            st.success(f"–ì–æ—Ç–æ–≤–æ! –ù–∞–π–¥–µ–Ω–æ –∫–æ–º–ø–∞–Ω–∏–π: {len(df)}")
            st.info(f"–£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å—Ç—Ä–∞–Ω–∏—Ü: {last_page - start_page + 1} –∏–∑ {pages}")
            st.dataframe(df)

            output = io.BytesIO()
            df.to_excel(output, index=False)
            output.seek(0)

            st.download_button(
                label="üì• –°–∫–∞—á–∞—Ç—å Excel-—Ñ–∞–π–ª",
                data=output,
                file_name="made_in_china_companies.xlsx",
                mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
            )
        else:
            st.warning("–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.")